version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: spond-postgres
    environment:
      POSTGRES_DB: spond_analytics
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d spond_analytics"]
      interval: 5s
      timeout: 5s
      retries: 5

  ingester:
    build:
      # Change the context to the 'ingestion' directory
      context: ./ingestion # <--- CHANGE THIS LINE
      dockerfile: Dockerfile # <--- CHANGE THIS LINE (no longer needs ./ingestion/)
    container_name: spond-ingester
    depends_on:
      db:
        condition: service_healthy # Ensure DB is ready before ingester starts
    environment:
      DB_HOST: db # Hostname for services within Docker network
      DB_PORT: 5432
      DB_NAME: spond_analytics
      DB_USER: postgres
      DB_PASSWORD: postgres
    volumes:
      # Update these paths to point to the new 'data' directory
      - ./data/teams.csv:/app/teams.csv:ro
      - ./data/memberships.csv:/app/memberships.csv:ro
      - ./data/events.csv:/app/events.csv:ro
      - ./data/event_rsvps.csv:/app/event_rsvps.csv:ro
    command: python ingest_data.py

  dbt-cli:
    build:
      context: ./dbt
      dockerfile: Dockerfile
    container_name: spond-dbt-cli
    depends_on:
      db:
        condition: service_healthy
    environment:
      DBT_POSTGRES_HOST: db
      DBT_POSTGRES_PORT: 5432
      DBT_POSTGRES_USER: postgres
      DBT_POSTGRES_PASSWORD: postgres
      DBT_POSTGRES_DBNAME: spond_analytics
      DBT_POSTGRES_SCHEMA: public
    volumes:
      - ./dbt:/usr/app/dbt
      - ./dbt/profiles.yml:/root/.dbt/profiles.yml:ro
    working_dir: /usr/app/dbt
    # REMOVE THIS LINE:
    # entrypoint: dbt
    command: python -m dbt build

volumes:
  postgres_data: